
# Focus par secteurs

Nous nous intéressions à la répartition des télédéclaration en fonction des secteurs principaux et secondaires, pour la campagne sur les données 2022. Nous utilisons la stratégie **Je Ne Sais Pas** pour le traitement des valeurs manquantes.

```{python}
# | echo: false
# | output: asis

def traitement_secteurs(df, year):
    df["canteen.sectors"] = tds[year]["canteen.sectors"].fillna("[]")
    if year != "2021":  # Transform the dict into a list of category
        if cache:
            df["canteen.sectors"] = df["canteen.sectors"].apply(lambda x: ast.literal_eval(x))
        df["canteen.sectors_"] = df["canteen.sectors"].apply(lambda x: [item["name"] for item in x])
    else:
        df["canteen.sectors_"] = df["canteen.sectors"].apply(lambda x: x.split(","))

    # Explode the lists into separate rows
    df_exploded = df.explode("canteen.sectors_")

    # Use get_dummies to create dummy columns for each category
    categories_dummies = pd.get_dummies(df_exploded["canteen.sectors_"])

    # Group by the index (items) and sum the dummy columns

    categories_dummies_grouped = categories_dummies.groupby(by=categories_dummies.index).sum()
    # Concatenate the dummy columns with the original DataFrame
    df_normalized = pd.concat([df, categories_dummies_grouped], axis=1)

    # Drop the 'categories' column since we have the dummies
    df_normalized = df_normalized.drop(columns=["canteen.sectors_"])

    return df_normalized


sectors = {}
for year in ["2022_strat_2"]:
    sectors[year] = {}
    df_processed_sectors = traitement_secteurs(tds[year], year)

    for cat in utils.SECTORS.keys():
        sectors[year][cat] = {}
        df_cat = df_processed_sectors[df_processed_sectors[cat] > 0]
        sectors[year][cat]['Nombre de TD'] = df_cat[cat].sum()
        sectors[year][cat]['% des TD pris en compte'] = f'{100*len(df_cat[cat])/len(tds[year]):.2f} %'
        sectors[year][cat]['Valeur totale des achats'] = f'{df_cat["teledeclaration.value_total_ht"].sum():.0f}'
        sectors[year][cat]['% achats secteurs'] = f'{100*df_cat["teledeclaration.value_total_ht"].sum()/ tds[year]["teledeclaration.value_total_ht"].sum():.2f} %'
        sectors[year][cat]['Valeur des achats Bio'] = f'{df_cat["teledeclaration.value_bio_ht"].sum():.0f}'
    summary_by_sector = pd.DataFrame.from_dict(sectors[year]).T

    # Ajout des catégories pour caractériser chaque sous-catégorie
    summary_by_sector['sector'] = summary_by_sector.index.map(utils.SECTORS)
    summary_by_sector = summary_by_sector.reset_index(names='sub_sector')
    summary_by_sector = summary_by_sector.groupby(['sector', 'sub_sector']).sum()
    print(summary_by_sector.to_html())
    print('\n')

```