---
title: "Ma-Cantine : Création du dataset TD"
author:
  - "Quentin Loridant"
date: "2023-06-07"
format:
  html:
    embed-resources: true
    code-fold: true
    theme:
      - readable
    toc: true
    toc-depth: 2
execute:
  cache: true
---


# Import des données et des librairies
```{python import}
import pandas as pd
import os
import datetime
import requests
import json
from dotenv import load_dotenv
from frictionless import describe
from table_schema_to_markdown import convert_source

```

Afin de récupérer les données, il vous faut un TOKEN metabase :  
`curl -X POST -H "Content-Type: application/json" -d '{"username": <USERNAME>, "password": <PASSWORD>}' https://ma-cantine-metabase.cleverapps.io/api/session`



```{python Import des données canteens}
url = "https://ma-cantine-metabase.cleverapps.io/api/card/800/query/json"

load_dotenv()

header = {
    "Content-Type": "application/json",
    "X-Metabase-Session": os.getenv("METABASE_TOKEN"),
}

res = requests.post(
    url,
    headers=header,
)
td = pd.DataFrame(res.json())
td["declared_data"] = td["declared_data"].apply(json.loads)
td_json = pd.json_normalize(td["declared_data"])
td = pd.concat([td.drop("declared_data", axis=1), td_json], axis=1)
```


# Nettoyage et formattage des données
```{python Nettoyage des données}
nbre_td_full = len(td)
td = td.dropna(subset=["canteen_id"])
print(f"Nous avons enlevé {nbre_td_full - len(td)} doublons")
print("Nombre de télédéclarations uniques: ", len(td))
```


```{python Construction du schéma des données}
# Generate a Markdown documentation from a JSON file
table_schema = "open_data/schema_teledeclaration.json"
with open("open_data/schema_teledeclaration.md", "w") as out:
    out.write("> :warning: FICHIER GENERE AUTOMATIQUEMENT. NE PAS MODIFIER. POUR TOUTE MODIFICATION, EDITEZ LE FICHIER schema_teledeclaration.json /////\n\n")
    convert_source(table_schema, out)
```